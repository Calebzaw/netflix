{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeatureMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","fontSyze","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","black","movieList","setMovieList","featuredData","setFeatureData","blackHeader","setblackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13a45f18.chunk.js","sourcesContent":["const API_KEY = 'a1b35736a79583a39fef33408f7e1799';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    return (await fetch(`${API_BASE}${endpoint}`)).json();\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) =>{\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport './MovieRow.css';\r\n\r\nexport default ({title, items}) => {\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x > 0){\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if((window.innerWidth - listW) > x) {\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSyze: 50}}/>\r\n            </div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './FeatureMovie.css';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres) {\r\n        genres.push( item.genres[i].name );\r\n    }\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assitir</a>\r\n                        <a href={`/list/add/${item.id}`}className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured-genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                </div>  \r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n      <header className={black ? 'black' : ''}>\r\n          <div className=\"header--logo\">\r\n            <a href=\"/\">\r\n              <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix\"/>\r\n            </a>\r\n          </div>\r\n          <div className=\"header--user\">\r\n            <a href=\"/\">\r\n              <img src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Usuário\"/>\r\n            </a>\r\n          </div>\r\n      </header>  \r\n    );\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeatureMovie';\nimport Header from './components/Header';\n//https://github.com/toandriottibertoni/react-netflix-clone-ui\n\nexport default () => {\n\n    const [movieList, setMovieList] = useState([]);\n    const [featuredData, setFeatureData] = useState(null);\n    const [blackHeader, setblackHeader] = useState(false);\n\n    useEffect(() => {\n        const loadAll = async () => {\n          //Pegando a Lista Total\n            let list = await Tmdb.getHomeList();\n            //console.log(list);\n            setMovieList(list);\n\n\n          //Pegando o Featured\n            let originals = list.filter(i=>i.slug === 'originals');\n            let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n            let chosen = originals[0].items.results[randomChosen];\n            let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n            setFeatureData(chosenInfo);\n        }\n        loadAll();\n    }, []);\n\n    useEffect(()=>{\n      const scrollListener = () => {\n        if(window.scrollY > 10) {\n          setblackHeader(true);\n        }else {\n          setblackHeader(false);\n        }\n      }\n      window.addEventListener('scroll', scrollListener);\n      return () => {\n        window.removeEventListener('scroll', scrollListener);\n      }\n    }, []);\n\n    return (\n        <div className=\"page\">\n\n        <Header black={blackHeader}/>\n\n\n        {featuredData && \n          <FeatureMovie item={featuredData}/>\n        }\n\n\n          <section className=\"lists\">\n            {movieList.map((item, key)=>(\n              <MovieRow key={key} title={item.title} items={item.items} />\n            ))}\n          </section>\n          <footer>\n            Feito com <span role=\"img\" aria-label=\"coração\">❤</span>\n            Direitos de imagem para Netflix<br/>\n            Dados pegos do site ThemovieDB.org\n          </footer>\n          \n          {movieList.length <= 0 &&\n            <div className=\"loading\">\n              <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif\"/>\n            </div>\n          }\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}